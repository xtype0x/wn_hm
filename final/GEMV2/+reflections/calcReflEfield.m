function[reflEfields,reflDist] = calcReflEfield(reflRays,buildingReflRelPerm,...
    vehReflRelPerm,polarization,vehiclesHeight,commPairs,txPower,Gt)
% CALCREFLEFIELD Calculates the magnitude of the E-field generated by
% reflected rays.
%
% Input:
%   reflRays:               array containing reflections; structure:
%                           [x1,y1,x2,y2,commPairID,building refl.(0)/vehicle(1)]
%                           one reflected ray occupies two rows (incident
%                           and reflected component)
%   buildingReflRelPerm:    relative permittivity of buildings
%   vehReflRelPerm:         relative permittivity of vehicles
%   polarization:           antenna polarization: 0-vertical; 1-horizontal
%   commPairLOSDists:       LOS distance between comm. pairs
%   vehiclesHeight:         heights of vehicles
%   commPairs:              IDs of vehicles participating in comm. pairs
%   freq:                   frequency (in Hz)
%   txPower:                Tx power (in dBm)
%   Gt                      antenna gain at the transmitter
%
% Output:
%   reflEfields:            reflections E-field
%   reflDist:               distance traversed by each reflected ray
%
% Copyright (c) 2014, Mate Boban


% Get the incidence angles for each of the reflected rays. Get absolute
% value because the orientation of the angle is not important.
incidentAnglesReflRays = ...
    abs(polygonManipulation.getAngles([reflRays(:,[3 4]) reflRays(:,[1 2])]));
%we only need the odd angles (i.e., between 1-2, 3-4, 5-6, ...)
if exist('deg2rad')==5
    incidentAnglesReflRays = (deg2rad(180)-incidentAnglesReflRays(1:2:end))./2;
else
    incidentAnglesReflRays = ...
        (polygonManipulation.deg2rad(180)-incidentAnglesReflRays(1:2:end))./2;
end

% Get the reflection coefficient for reflecting rays
reflRayPermittivity = zeros(size(reflRays,1)/2,1);
reflRayPermittivity(reflRays(1:2:end,6)==0) = buildingReflRelPerm;
reflRayPermittivity(reflRays(1:2:end,6)==1) = vehReflRelPerm;
reflCoeffRays = reflections.getReflCoeff(incidentAnglesReflRays,...
    reflRayPermittivity,polarization);

% Get the reflected ray distance 
reflDist = sqrt((reflRays(:,1)-reflRays(:,3)).^2+(reflRays(:,2)-reflRays(:,4)).^2);
% Accounting for the height of Tx and Rx vehicles and antennas.
if nargin == 8
    % Simulations
    reflDist = sqrt((reflDist(1:2:end-1)+reflDist(2:2:end)).^2+...
        (vehiclesHeight(commPairs(reflRays(1:2:end-1,5),1))-...
        vehiclesHeight(commPairs(reflRays(1:2:end-1,5),2))).^2);
else
    error('Bad use of calcReflEfields');
end
% Calculate E-field for reflecting rays
reflEfields = reflections.getReflEfield(reflCoeffRays,reflDist,txPower,Gt);