function[vehicleMidpoints] = getVehicleMidpoint(vehicleRows,numRowsPerVehicle,verbose)
% GETVEHICLEMIDPOINT Calculates vehicle midpoints. 
%
% Input:
%   vehicleRows                 vehicle outlines in a three-column format:
%                               [ID,X,Y] 
%   numRowsPerVehicle:          number of rows per vehicle
%   verbose:                    verbose output
%
% Output:   
%   vehicleMidpoints:           vehicle midpoints
%
% Copyright (c) 2014, Mate Boban

tic

% If each vehicle is represented by one row (one point), return that point.
if numRowsPerVehicle==1
    vehicleMidpoints = vehicleRows(:,[2 3]);
else
    vehicleMidpoints = ones(size(vehicleRows,1)/numRowsPerVehicle,2);
    
    centroidMidpoint = 0;    
    if centroidMidpoint
        % Use the centroid method of calculating midpoint (see
        % http://en.wikipedia.org/wiki/Centroid#Of_a_finite_set_of_points).
        % Otherwise, use the method described above (recommended if vehicle
        % outlines are generated by SUMO).
        for jj = 1:size(vehicleMidpoints,1)
            vehicleMidpoints(jj,1) = sum(vehicleRows((jj-1)*numRowsPerVehicle+...
                1:jj*numRowsPerVehicle,2))/numRowsPerVehicle;
            vehicleMidpoints(jj,2) = sum(vehicleRows((jj-1)*numRowsPerVehicle+...
                1:jj*numRowsPerVehicle,3))/numRowsPerVehicle;
        end
    else        
        % Assumptions: vehicle points are organized according to the fig
        % below; second and numRowsPerVehicle/2+1th point define the long
        % diagonal on the vehicle outline. Figure below is for the case of
        % an outline defined by 5 points (numRowsPerVehicle=6, since first
        % point repeats at the end).
        %    _____2
        %   |     \
        %   4_____/1
        for jj = 1:size(vehicleMidpoints,1)
            vehicleMidpoints(jj,1) = (vehicleRows(jj*numRowsPerVehicle-floor...
                (numRowsPerVehicle/2)+1,2)+vehicleRows(jj*numRowsPerVehicle-...
                numRowsPerVehicle+2,2))/2;
            vehicleMidpoints(jj,2) = (vehicleRows(jj*numRowsPerVehicle-floor...
                (numRowsPerVehicle/2)+1,3)+vehicleRows(jj*numRowsPerVehicle-...
                numRowsPerVehicle+2,3))/2;
        end
    end
end
if verbose
    fprintf('Generating vehicle midpoints takes %f seconds\n', toc);
end